

-------------------
update query 
-------------------
CALL apoc.load.json('https://api.openalex.org/works?filter=institutions.id:I180949307') yield value
unwind value.results as r
unwind r.authorships as a
Match (u:USER{id:a.author.id})
Set u.orcid = a.author.orcid

-------------
## Build DB
-------------
CALL apoc.load.json('https://api.openalex.org/works?filter=institutions.id:I180949307&page=1&sort=publication_date:desc&per-page=20') yield value
unwind value.results as r
unwind r.authorships as a
unwind a.institutions as i
merge (work:Work{id:r.id}) ON CREATE SET work.title = r.display_name, work.doi = r.ids.doi, work.oa = r.open_access.is_oa, work.publication_date = date(r.publication_date), work.alex_last_update = date(r.updated_date) ON MATCH SET work.title = r.display_name, work.doi = r.ids.doi, work.oa = r.open_access.is_oa, work.publication_date = date(r.publication_date), work.alex_last_update = date(r.updated_date)
merge (p:Person{id:a.author.display_name}) ON CREATE SET p.oa_id = a.author.id, p.orcid = a.author.orcid ON MATCH SET p.oa_id = a.author.id, p.orcid = a.author.orcid
merge (inst:Institution{id: coalesce(i.id, "unknown_" ) })
ON CREATE set inst.oa_id = i.id, inst.name = i.display_name, inst.country = i.country_code
merge(p)-[:Authored]->(work)
merge(p)-[:MemberOf]->(inst)

-------------------------
## match people who are member of IIT
-------------------------
MATCH (p:Person)-[m:MemberOf]->(i:Institution)
WHERE i.name = "Illinois Institute of Technology" AND p.orcid IS NOT NULL
    return p
